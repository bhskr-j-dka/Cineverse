{"ast":null,"code":"var _jsxFileName = \"/Users/bhskr_dka/Desktop/movie/src/components/MovieGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../styles.css\";\nimport MovieCard from \"./MovieCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function MovieGrid() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [genre, setGenre] = useState(\"All Genres\");\n  const [rating, setRating] = useState(\"All\");\n  useEffect(() => {\n    fetch(\"movies.json\").then(response => response.json()).then(data => setMovies(data));\n  }, []);\n  const handleSearch = e => {\n    setSearchTerm(e.target.value);\n  };\n  const handleGenre = e => {\n    setGenre(e.target.value);\n  };\n  const matchesGenre = (movies, genre) => {\n    return genre === \"All Genres\" || movies.genre.toLowerCase() === genre.toLowerCase();\n  };\n  const matchSearchTerm = (movies, searchTerm) => {\n    movies.title.toLowerCase().includes(searchTerm.toLowerCase());\n  };\n  const filteredMovies = movies.filter(movies => matchSearchTerm(movies, searchTerm) && matchesGenre(movies, genre));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"search-input\",\n      placeholder: \"Search movies...\",\n      value: searchTerm,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-slot\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Genres\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"filter-dropdown\",\n          value: genre,\n          onChange: handleGenre,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"All Genres\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Drama\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Fantacy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Horror\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-slot\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Rating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"filter-dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Good\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Ok\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Bad\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-grid\",\n      children: filteredMovies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieGrid, \"At+ISVNA4t9K6BXX5o9YlVoU65c=\");\n_c = MovieGrid;\nvar _c;\n$RefreshReg$(_c, \"MovieGrid\");","map":{"version":3,"names":["React","useState","useEffect","MovieCard","jsxDEV","_jsxDEV","MovieGrid","_s","movies","setMovies","searchTerm","setSearchTerm","genre","setGenre","rating","setRating","fetch","then","response","json","data","handleSearch","e","target","value","handleGenre","matchesGenre","toLowerCase","matchSearchTerm","title","includes","filteredMovies","filter","children","type","className","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","id","_c","$RefreshReg$"],"sources":["/Users/bhskr_dka/Desktop/movie/src/components/MovieGrid.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../styles.css\";\nimport MovieCard from \"./MovieCard\";\n\nexport function MovieGrid() {\n  const [movies, setMovies] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const [genre, setGenre] = useState(\"All Genres\");\n  const [rating, setRating] = useState(\"All\");\n  useEffect(() => {\n    fetch(\"movies.json\")\n      .then((response) => response.json())\n      .then((data) => setMovies(data));\n  }, []);\n  const handleSearch = (e) => {\n    setSearchTerm(e.target.value);\n  };\n  const handleGenre = (e) => {\n    setGenre(e.target.value);\n  };\n  const matchesGenre = (movies, genre) => {\n    return (\n      genre === \"All Genres\" ||\n      movies.genre.toLowerCase() === genre.toLowerCase()\n    );\n  };\n  const matchSearchTerm = (movies, searchTerm) => {\n    movies.title.toLowerCase().includes(searchTerm.toLowerCase());\n  };\n  const filteredMovies = movies.filter((movies) =>\n    matchSearchTerm(movies, searchTerm) &&\n     matchesGenre(movies,genre)\n  );\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        className=\"search-input\"\n        placeholder=\"Search movies...\"\n        value={searchTerm}\n        onChange={handleSearch}\n      />\n      <div className=\"filter-bar\">\n        <div className=\"filter-slot\">\n          <label>Genres</label>\n          <select\n            className=\"filter-dropdown\"\n            value={genre}\n            onChange={handleGenre}\n          >\n            <option>All Genres</option>\n            <option>Action</option>\n            <option>Drama</option>\n            <option>Fantacy</option>\n            <option>Horror</option>\n          </select>\n        </div>\n        <div className=\"filter-slot\">\n          <label>Rating</label>\n          <select className=\"filter-dropdown\">\n            <option>All</option>\n            <option>Good</option>\n            <option>Ok</option>\n            <option>Bad</option>\n          </select>\n        </div>\n      </div>\n      <div className=\"movies-grid\">\n        {filteredMovies.map((movie) => (\n          <MovieCard movie={movie} key={movie.id}></MovieCard>\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,eAAe;AACtB,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,OAAO,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,YAAY,CAAC;EAChD,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC3CC,SAAS,CAAC,MAAM;IACdc,KAAK,CAAC,aAAa,CAAC,CACjBC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKX,SAAS,CAACW,IAAI,CAAC,CAAC;EACpC,CAAC,EAAE,EAAE,CAAC;EACN,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BX,aAAa,CAACW,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EACD,MAAMC,WAAW,GAAIH,CAAC,IAAK;IACzBT,QAAQ,CAACS,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC1B,CAAC;EACD,MAAME,YAAY,GAAGA,CAAClB,MAAM,EAAEI,KAAK,KAAK;IACtC,OACEA,KAAK,KAAK,YAAY,IACtBJ,MAAM,CAACI,KAAK,CAACe,WAAW,CAAC,CAAC,KAAKf,KAAK,CAACe,WAAW,CAAC,CAAC;EAEtD,CAAC;EACD,MAAMC,eAAe,GAAGA,CAACpB,MAAM,EAAEE,UAAU,KAAK;IAC9CF,MAAM,CAACqB,KAAK,CAACF,WAAW,CAAC,CAAC,CAACG,QAAQ,CAACpB,UAAU,CAACiB,WAAW,CAAC,CAAC,CAAC;EAC/D,CAAC;EACD,MAAMI,cAAc,GAAGvB,MAAM,CAACwB,MAAM,CAAExB,MAAM,IAC1CoB,eAAe,CAACpB,MAAM,EAAEE,UAAU,CAAC,IAClCgB,YAAY,CAAClB,MAAM,EAACI,KAAK,CAC5B,CAAC;EAED,oBACEP,OAAA;IAAA4B,QAAA,gBACE5B,OAAA;MACE6B,IAAI,EAAC,MAAM;MACXC,SAAS,EAAC,cAAc;MACxBC,WAAW,EAAC,kBAAkB;MAC9BZ,KAAK,EAAEd,UAAW;MAClB2B,QAAQ,EAAEhB;IAAa;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACFpC,OAAA;MAAK8B,SAAS,EAAC,YAAY;MAAAF,QAAA,gBACzB5B,OAAA;QAAK8B,SAAS,EAAC,aAAa;QAAAF,QAAA,gBAC1B5B,OAAA;UAAA4B,QAAA,EAAO;QAAM;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACrBpC,OAAA;UACE8B,SAAS,EAAC,iBAAiB;UAC3BX,KAAK,EAAEZ,KAAM;UACbyB,QAAQ,EAAEZ,WAAY;UAAAQ,QAAA,gBAEtB5B,OAAA;YAAA4B,QAAA,EAAQ;UAAU;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC3BpC,OAAA;YAAA4B,QAAA,EAAQ;UAAM;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACvBpC,OAAA;YAAA4B,QAAA,EAAQ;UAAK;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACtBpC,OAAA;YAAA4B,QAAA,EAAQ;UAAO;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACxBpC,OAAA;YAAA4B,QAAA,EAAQ;UAAM;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACNpC,OAAA;QAAK8B,SAAS,EAAC,aAAa;QAAAF,QAAA,gBAC1B5B,OAAA;UAAA4B,QAAA,EAAO;QAAM;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACrBpC,OAAA;UAAQ8B,SAAS,EAAC,iBAAiB;UAAAF,QAAA,gBACjC5B,OAAA;YAAA4B,QAAA,EAAQ;UAAG;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACpBpC,OAAA;YAAA4B,QAAA,EAAQ;UAAI;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACrBpC,OAAA;YAAA4B,QAAA,EAAQ;UAAE;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACnBpC,OAAA;YAAA4B,QAAA,EAAQ;UAAG;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNpC,OAAA;MAAK8B,SAAS,EAAC,aAAa;MAAAF,QAAA,EACzBF,cAAc,CAACW,GAAG,CAAEC,KAAK,iBACxBtC,OAAA,CAACF,SAAS;QAACwC,KAAK,EAAEA;MAAM,GAAMA,KAAK,CAACC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CACpD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAClC,EAAA,CAxEeD,SAAS;AAAAuC,EAAA,GAATvC,SAAS;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}